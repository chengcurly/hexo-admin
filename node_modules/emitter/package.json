{
  "_args": [
    [
      {
        "raw": "emitter@git://github.com/component/emitter.git#1.0.0",
        "scope": null,
        "escapedName": "emitter",
        "name": "emitter",
        "rawSpec": "git://github.com/component/emitter.git#1.0.0",
        "spec": "git://github.com/component/emitter.git#1.0.0",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:component/emitter.git#1.0.0",
          "sshUrl": "git+ssh://git@github.com/component/emitter.git#1.0.0",
          "httpsUrl": "git+https://github.com/component/emitter.git#1.0.0",
          "gitUrl": "git://github.com/component/emitter.git#1.0.0",
          "shortcut": "github:component/emitter#1.0.0",
          "directUrl": "https://raw.githubusercontent.com/component/emitter/1.0.0/package.json"
        }
      },
      "/Users/curly/Libspace/blog/node_modules/hexo-admin/node_modules/superagent-browserify"
    ]
  ],
  "_from": "git://github.com/component/emitter.git#1.0.0",
  "_id": "emitter@1.0.0",
  "_inCache": true,
  "_location": "/emitter",
  "_phantomChildren": {},
  "_requested": {
    "raw": "emitter@git://github.com/component/emitter.git#1.0.0",
    "scope": null,
    "escapedName": "emitter",
    "name": "emitter",
    "rawSpec": "git://github.com/component/emitter.git#1.0.0",
    "spec": "git://github.com/component/emitter.git#1.0.0",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:component/emitter.git#1.0.0",
      "sshUrl": "git+ssh://git@github.com/component/emitter.git#1.0.0",
      "httpsUrl": "git+https://github.com/component/emitter.git#1.0.0",
      "gitUrl": "git://github.com/component/emitter.git#1.0.0",
      "shortcut": "github:component/emitter#1.0.0",
      "directUrl": "https://raw.githubusercontent.com/component/emitter/1.0.0/package.json"
    }
  },
  "_requiredBy": [
    "/superagent-browserify"
  ],
  "_resolved": "git://github.com/component/emitter.git#9c5379b4d1985a9a16745abe7bbc31524b8a090e",
  "_shasum": "ed649c632235bc7fbe5510bb83c98b92d44c1036",
  "_shrinkwrap": null,
  "_spec": "emitter@git://github.com/component/emitter.git#1.0.0",
  "_where": "/Users/curly/Libspace/blog/node_modules/hexo-admin/node_modules/superagent-browserify",
  "component": {
    "scripts": {
      "emitter": "index.js"
    }
  },
  "dependencies": {},
  "description": "Event emitter",
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "gitHead": "9c5379b4d1985a9a16745abe7bbc31524b8a090e",
  "name": "emitter",
  "optionalDependencies": {},
  "readme": "# Emitter\n\n  Event emitter component.\n\n## Installation\n\n```\n$ component install component/emitter\n```\n\n## API\n\n### Emitter(obj)\n\n  The `Emitter` may also be used as a mixin. For example\n  a \"plain\" object may become an emitter, or you may\n  extend an existing prototype.\n\n  As an `Emitter` instance:\n\n```js\nvar Emitter = require('emitter');\nvar emitter = new Emitter;\nemitter.emit('something');\n```\n\n  As a mixin:\n\n```js\nvar Emitter = require('emitter');\nvar user = { name: 'tobi' };\nEmitter(user);\n\nuser.emit('im a user');\n```\n\n  As a prototype mixin:\n\n```js\nvar Emitter = require('emitter');\nEmitter(User.prototype);\n```\n  \n### Emitter#on(event, fn)\n\n  Register an `event` handler `fn`.\n\n### Emitter#once(event, fn)\n\n  Register a single-shot `event` handler `fn`,\n  removed immediately after it is invoked the\n  first time.\n\n### Emitter#off(event, fn)\n\n  Remove `event` handler `fn`, or pass only the `event`\n  name to remove all handlers for `event`.\n\n### Emitter#emit(event, ...)\n\n  Emit an `event` with variable option args.\n\n### Emitter#listeners(event)\n\n  Return an array of callbacks, or an empty array.\n\n### Emitter#hasListeners(event)\n\n  Check if this emitter has `event` handlers.",
  "readmeFilename": "Readme.md",
  "version": "1.0.0"
}
